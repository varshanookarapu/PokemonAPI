{"version":3,"sources":["Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","useState","num","setNum","name","height","weight","abilities","pokemon","setPokemon","useEffect","a","axios","get","res","console","log","data","getData","style","color","className","type","value","onChange","event","target","length","map","ability","src","sprites","back_default","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAMe,SAASA,IAAQ,IAAD,EAC7B,EAAsBC,qBAAtB,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA8BF,mBAAS,CACrCG,KAAM,KACNC,OAAQ,KACRC,OAAQ,KACRC,UAAW,KAJb,mBAAOC,EAAP,KAAgBC,EAAhB,KAmCA,OA1BAC,qBAAU,WAAM,4CAcd,4BAAAC,EAAA,sEACoBC,IAAMC,IAAN,4CAA+CX,IADnE,OACQY,EADR,OAEEC,QAAQC,IAAIF,EAAIG,MAEhBR,EAAWK,EAAIG,MACfF,QAAQC,IAAIF,EAAIG,KAAKb,MALvB,4CAdc,sBAqBVF,GArBU,mCAsBZgB,KAED,CAAChB,IAGF,gCACE,oBAAIiB,MAAO,CAAEC,MAAO,SAApB,gCACA,oBAAID,MAAO,CAAEC,MAAO,SAApB,sCACA,uBACEC,UAAU,oDACVC,KAAK,OACLC,MAAOrB,EACPsB,SAAU,SAACC,GACTtB,EAAOsB,EAAMC,OAAOH,UAIxB,qBAAIF,UAAU,MAAMF,MAAO,CAAEC,MAAO,SAApC,qDAC2ClB,KAE3C,sBAAKmB,UAAU,UAAf,UACE,sBAAKA,UAAU,yDAAf,UACE,yCACA,wCAAWb,EAAQJ,QACnB,0CAAaI,EAAQH,UACrB,0CAAaG,EAAQF,UACrB,6CACCE,EAAQD,UAAUoB,OACjB,8BACGnB,EAAQD,UAAUqB,KAAI,gBAAGC,EAAH,EAAGA,QAAH,OACrB,8BAAyBA,EAAQzB,MAAvByB,EAAQzB,WAItB,kDAIJ,qBAAKiB,UAAU,mEAAf,SACE,qBAAKS,IAAG,UAAEtB,EAAQuB,eAAV,aAAE,EAAiBC,aAAcX,UAAU,sB,MCnE9CY,MARf,WACE,OACE,qBAAKZ,UAAU,aAAf,SACE,cAACrB,EAAD,OCMSkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0c7442fb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport card from \"./card.css\";\r\n//import Pokemon from \"pokemon-images\";\r\n\r\nexport default function Card() {\r\n  const [num, setNum] = useState();\r\n  const [pokemon, setPokemon] = useState({\r\n    name: \"NA\",\r\n    height: \"NA\",\r\n    weight: \"NA\",\r\n    abilities: [],\r\n  });\r\n\r\n  //const [abilities, setAbilities] = useState(\"NA\");\r\n\r\n  useEffect(() => {\r\n    //alert(\"Hello man , use effect is running\");\r\n    //https://pokeapi.co/api/v2/pokemon/${num}\r\n    //https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/2.png-->POKEMON IMAGES\r\n    //sprites.back_default\r\n    /* const [name, setName] = useState(\"NA\");\r\n  const [height, setHeight] = useState(\"NA\");\r\n  const [weight, setWeight] = useState(\"NA\");\r\n  const [image, setImage] = useState(\"NA\");\r\n    setName(res.data.name);\r\n      setHeight(res.data.height);\r\n      setWeight(res.data.weight);\r\n      setImage(res.data.sprites.back_default);*/\r\n\r\n    async function getData() {\r\n      const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${num}`);\r\n      console.log(res.data);\r\n\r\n      setPokemon(res.data);\r\n      console.log(res.data.name);\r\n    }\r\n    if (num) {\r\n      getData();\r\n    }\r\n  }, [num]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ color: \"beige\" }}>Poke Poke Pokemons</h1>\r\n      <h2 style={{ color: \"beige\" }}>Please type in a number:</h2>\r\n      <input\r\n        className=\"tc bg-washed-red dib w5 h3 br4 grow shadow-2 -m b\"\r\n        type=\"text\"\r\n        value={num}\r\n        onChange={(event) => {\r\n          setNum(event.target.value);\r\n        }}\r\n      />\r\n\r\n      <h2 className=\"pa4\" style={{ color: \"beige\" }}>\r\n        I have selected the pokemon Card number {num}\r\n      </h2>\r\n      <div className=\"cardbox\">\r\n        <div className=\"tc bg-washed-green dib br4 pa5 ma2 grow bw2 shadow-5 i\">\r\n          <h3>POKEMON</h3>\r\n          <h4>Name: {pokemon.name}</h4>\r\n          <h4>Height: {pokemon.height}</h4>\r\n          <h4>Weight: {pokemon.weight}</h4>\r\n          <h4>Abilities: </h4>\r\n          {pokemon.abilities.length ? (\r\n            <div>\r\n              {pokemon.abilities.map(({ ability }) => (\r\n                <div key={ability.name}>{ability.name}</div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div>No Abilities</div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"tc bg-washed-green dib br4 pa5 ma2 grow bw2 shadow-5 i w200 h200\">\r\n          <img src={pokemon.sprites?.back_default} className=\"w200 h200\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Card from \"./Card\";\nimport tachyons from \"tachyons\";\n\nfunction App() {\n  return (\n    <div className=\"tc  bodoni\">\n      <Card />\n    </div>\n  );\n}\n//\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}